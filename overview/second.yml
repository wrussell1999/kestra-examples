id: data_example
namespace: overview_video

inputs:
  - id: data_url
    type: STRING
    defaults: https://dummyjson.com/products

tasks:
  - id: extract
    type: io.kestra.plugin.core.http.Download
    uri: "{{ inputs.data_url }}"

  - id: transform
    type: io.kestra.plugin.scripts.python.Script
    containerImage: python:3.11-alpine
    inputFiles:
      data.json: "{{ outputs.extract.uri }}"
    outputFiles:
      - "*.json"
    env:
      COLUMNS_TO_KEEP: '["brand","price"]'
    script: |
      import json
      import os

      columns_to_keep_str = os.getenv("COLUMNS_TO_KEEP")
      columns_to_keep = json.loads(columns_to_keep_str)

      with open("data.json", "r") as file:
          data = json.load(file)

      filtered_data = [
          {column: product.get(column, "N/A") for column in columns_to_keep}
          for product in data["products"]
      ]

      with open("products.json", "w") as file:
          json.dump(filtered_data, file, indent=4)

  - id: query
    type: io.kestra.plugin.jdbc.duckdb.Query
    inputFiles:
      products.json: "{{ outputs.transform.outputFiles['products.json'] }}"
    sql: |
      INSTALL json;
      LOAD json;
      SELECT brand, round(avg(price), 2) as avg_price
      FROM read_json_auto('{{ workingDir }}/products.json')
      GROUP BY brand
      ORDER BY avg_price DESC;
    store: true

  - id: result
    type: io.kestra.plugin.serdes.csv.IonToCsv
    from: "{{ outputs.query.uri }}"

  - id: upload
    type: io.kestra.plugin.googleworkspace.drive.Upload
    from: "{{ outputs.result.uri }}"
    contentType: "text/csv"
    name: "Products"
    parents:
      - "1a2sg__7gizUTgGmezbfh0XtwNndaCOxf"
    mimeType: "application/vnd.google-apps.spreadsheet"
    serviceAccount: |
      { 
        "ENTER": "HERE" 
      }

  - id: notify
    type: io.kestra.plugin.notifications.mail.MailSend
    from: test@example.com
    to: test@example.com
    username: "EMAIL"
    password: "PASSWORD"
    host: smtp.gmail.com
    port: 465
    subject: "New data available for {{ outputs.upload.file.name }} - {{ outputs.upload.file.createdTime}}"
    htmlTextContent: "<a href='https://docs.google.com/spreadsheets/d/{{ outputs.upload.file.id }}'>Open Google Sheet</a>"
