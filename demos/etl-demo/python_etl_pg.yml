id: python_etl_pg
namespace: company.team

inputs:
  - id: dataset_uri
    type: STRING
    displayName: Dataset URI
    defaults: https://huggingface.co/datasets/kestra/datasets/raw/main/csv/orders.csv

  - id: discount_amount
    type: FLOAT
    displayName: Discount Amount
    description: By default, it's set to 0 (no discount).
    min: 0.01
    max: 1
    defaults: 0.1

variables:
  github_url: https://github.com/wrussell1999/kestra-examples
  filename: processed_orders.csv
  table: orders

tasks:
  - id: extract
    type: io.kestra.plugin.core.http.Download
    uri: "{{ inputs.dataset_uri }}"
  
  - id: wdir
    type: io.kestra.plugin.core.flow.WorkingDirectory
    tasks:
      - id: clone
        type: io.kestra.plugin.git.Clone
        url: "{{ vars.github_url }}"

      - id: transform
        type: io.kestra.plugin.scripts.python.Commands
        containerImage: ghcr.io/kestra-io/pydata:latest
        namespaceFiles:
          enabled: true
        beforeCommands:
          - pip install kestra
        inputFiles:
          data.csv: "{{ outputs.extract.uri }}"
        outputFiles:
          - "{{ vars.filename }}"
        env:
          DATASET: "data.csv"
          DISCOUNTED_AMOUNT: "{{ inputs.discount_amount ?? 0 }}"
          FILENAME: "{{ vars.filename }}"
        commands:
          - python demos/etl-demo/files/etl.py

  - id: create_table
    type: io.kestra.plugin.jdbc.postgresql.Queries
    sql: |
      CREATE TABLE IF NOT EXISTS {{ vars.table }} (
          order_id               integer,
          customer_name          text,
          customer_email         text,
          product_id             integer,
          price                  double precision,
          quantity               integer,
          total                  double precision,
          discounted_total       double precision
        );
  
  - id: load
    type: io.kestra.plugin.jdbc.postgresql.CopyIn
    format: CSV
    from: "{{ render(outputs.transform.outputFiles[vars.filename]) }}"
    table: "{{ vars.table }}"
    header: true
    columns: [order_id,customer_name,customer_email,product_id,price,quantity,total,discounted_total]

triggers:
  - id: schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: 0 10 * * *
    disabled: true

pluginDefaults:
  - forced: false
    type: io.kestra.plugin.jdbc.postgresql
    values:
      url: jdbc:postgresql://host.docker.internal:5432/etl_demo
      username: kestra
      password: k3str4 
