id: scripting_execution_time
namespace: company.team

inputs:
  - id: flow_id
    type: STRING
    defaults: transform_py_example

  - id: namespace
    type: STRING
    defaults: tutorial

  - id: total_runs
    type: INT
    defaults: 10

  - id: type
    type: SELECT
    values:
      - Script
      - GraalVM

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      - key: type
        value: "{{ inputs.type }}"

  - id: runs
    type: io.kestra.plugin.core.flow.ForEach
    values: "{{ range(1, inputs.total_runs) }}"
    tasks:
      - id: subflow
        type: io.kestra.plugin.core.flow.Subflow
        flowId: "{{ inputs.flow_id }}"
        namespace: "{{ inputs.namespace }}"

      - id: get_exectution
        type: io.kestra.plugin.core.http.Request
        uri: "http://localhost:8080/api/v1/executions/{{ outputs.subflow[taskrun.value].executionId }}"

      - id: calculate_duration
        type: io.kestra.plugin.graalvm.python.Eval
        outputs:
          - duration
        script: |
          output = "{{ outputs.get_execution[taskrun.value].body | jq('.state.duration') | first }}"
          duration = float(output.replace("PT", "").replace("S", ""))
              
  - id: calculate
    type: io.kestra.plugin.graalvm.python.Eval
    outputs:
      - average
    script: |
      durations = {{ outputs.calculate_duration }}
      total = 0
      for run in range(1,{{ inputs.total_runs }}):
        total += durations[str(run)]['outputs']['duration']
      average = total / {{ inputs.total_runs }}
      
  - id: log_average
    type: io.kestra.plugin.core.log.Log
    message: "{{ inputs.type }} took {{ outputs.calculate.outputs.average }}"
